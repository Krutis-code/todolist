[{"E:\\Kruti\\learnreact\\todolist\\src\\index.js":"1","E:\\Kruti\\learnreact\\todolist\\src\\reportWebVitals.js":"2","E:\\Kruti\\learnreact\\todolist\\src\\App.js":"3","E:\\Kruti\\learnreact\\todolist\\src\\components\\Form.js":"4","E:\\Kruti\\learnreact\\todolist\\src\\components\\TodoList.js":"5","E:\\Kruti\\learnreact\\todolist\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1759,"mtime":1609618160341,"results":"10","hashOfConfig":"8"},{"size":1167,"mtime":1609613233397,"results":"11","hashOfConfig":"8"},{"size":474,"mtime":1609614060300,"results":"12","hashOfConfig":"8"},{"size":902,"mtime":1609597902012,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vul1gt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"E:\\Kruti\\learnreact\\todolist\\src\\index.js",[],["30","31"],"E:\\Kruti\\learnreact\\todolist\\src\\reportWebVitals.js",[],"E:\\Kruti\\learnreact\\todolist\\src\\App.js",["32","33"],"import logo from './logo.svg';\nimport './App.css';\nimport Form from './components/Form';\nimport React,{  useState,useEffect} from \"react\";\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  //state\n  const [inputText,setInputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n    const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n//useEffect\n  useEffect (()=>{\n    filterHandler();\n    savaLocal();\n    \n    \n  },[todos,status]);\n\n//Runs once\n  useEffect(()=>{\n    getLocalTodos();\n    \n  },\n  []);\n  //function\n\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted' :\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  //save local\n  const savaLocal = () =>{\n    \n    \n      localStorage.setItem(\"todos\",JSON.stringify(todos));\n    \n  };\n\n  const getLocalTodos = () =>{\n    if(localStorage.getItem(\"todos\") == null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Kruti's Todo List</h1>\n      </header>\n      <Form \n      inputText = {inputText} \n      todos={todos} \n      setInputText={setInputText}\n       setTodos={setTodos}\n       setStatus={setStatus}\n       status={status}\n       \n       >\n\n       </Form>\n      <TodoList todos={todos} filteredTodos={filteredTodos} setTodos={setTodos}></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Kruti\\learnreact\\todolist\\src\\components\\Form.js",[],"E:\\Kruti\\learnreact\\todolist\\src\\components\\TodoList.js",[],"E:\\Kruti\\learnreact\\todolist\\src\\components\\Todo.js",["34"],"import React from 'react'\r\n\r\nconst Todo = ({text,todo,setTodos,todos}) => {\r\n    // Events\r\n\r\n    const deleteHandler = () =>{\r\n        setTodos(todos.filter((el)=>el.id !== todo.id ))\r\n    }\r\n  \r\n    const checkHandler = () =>{\r\n        setTodos(todos.map((item)=>{\r\n            if(item.id ==todo.id){\r\n                return{\r\n                    ...item,\r\n                    completed: !item.completed\r\n                }  \r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n  \r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ?  \"completed\":\"\"}`}>{text}</li>\r\n            <button className=\"complete-btn\" onClick={checkHandler} ><i className=\"fas fa-check\"></i></button>\r\n            <button className=\"trash-btn\" onClick={deleteHandler} ><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":20,"column":5,"nodeType":"47","endLine":20,"endColumn":19,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":12,"column":24,"nodeType":"51","messageId":"52","endLine":12,"endColumn":26},{"ruleId":"37","replacedBy":"53"},{"ruleId":"39","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'savaLocal'. Either include them or remove the dependency array.","ArrayExpression",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["55"],["56"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [todos, status, filterHandler, savaLocal]",{"range":"60","text":"61"},[484,498],"[todos, status, filterHandler, savaLocal]"]