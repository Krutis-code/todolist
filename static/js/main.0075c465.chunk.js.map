{"version":3,"sources":["logo.svg","components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","setStatus","status","setTodos","todos","inputText","value","type","onChange","text","target","className","onClick","preventDefault","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","setFilteredTodos","useEffect","filterHandler","savaLocal","getLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0075c465.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nfunction Form({setInputText,status,setStatus,setTodos,todos,inputText}) {\r\n\r\n  const inputTextHandle = (text) =>{\r\n    \r\n    setInputText(text.target.value);\r\n  };\r\n\r\n  \r\n  const submitTodoHandler = (text) =>{\r\n    text.preventDefault();\r\n    \r\n    setTodos([\r\n      ...todos,\r\n      { text:inputText, completed:false, id: Math.random() * 1000}\r\n    ]);\r\n    setInputText(\" \");\r\n  \r\n  };\r\n  const statusHandler = (text) =>{\r\n    setStatus(text.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input value={inputText} type=\"text\" onChange={inputTextHandle} className=\"todo-input\" />\r\n        <button className=\"todo-button\" onClick={submitTodoHandler} type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler}  name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nconst Todo = ({text,todo,setTodos,todos}) => {\r\n    // Events\r\n\r\n    const deleteHandler = () =>{\r\n        setTodos(todos.filter((el)=>el.id !== todo.id ))\r\n    }\r\n  \r\n    const checkHandler = () =>{\r\n        setTodos(todos.map((item)=>{\r\n            if(item.id ==todo.id){\r\n                return{\r\n                    ...item,\r\n                    completed: !item.completed\r\n                }  \r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n  \r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ?  \"completed\":\"\"}`}>{text}</li>\r\n            <button className=\"complete-btn\" onClick={checkHandler} ><i className=\"fas fa-check\"></i></button>\r\n            <button className=\"trash-btn\" onClick={deleteHandler} ><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\nfunction TodoList({todos,setTodos,filteredTodos}) {\r\n  //Events\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {filteredTodos.map(todo =>(\r\n            <Todo text={todo.text} todos={todos} todo={todo} setTodos={setTodos} key={todo.id}></Todo>\r\n          ))}\r\n          \r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Form from './components/Form';\nimport React,{  useState,useEffect} from \"react\";\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  //state\n  const [inputText,setInputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n    const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n//useEffect\n  useEffect (()=>{\n    filterHandler();\n    savaLocal();\n    \n    \n  },[todos,status]);\n\n//Runs once\n  useEffect(()=>{\n    getLocalTodos();\n    \n  },\n  []);\n  //function\n\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted' :\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  //save local\n  const savaLocal = () =>{\n    \n    \n      localStorage.setItem(\"todos\",JSON.stringify(todos));\n    \n  };\n\n  const getLocalTodos = () =>{\n    if(localStorage.getItem(\"todos\") == null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Kruti's Todo List</h1>\n      </header>\n      <Form \n      inputText = {inputText} \n      todos={todos} \n      setInputText={setInputText}\n       setTodos={setTodos}\n       setStatus={setStatus}\n       status={status}\n       \n       >\n\n       </Form>\n      <TodoList todos={todos} filteredTodos={filteredTodos} setTodos={setTodos}></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}